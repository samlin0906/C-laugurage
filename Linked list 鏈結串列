//021 Merge Two Sorted Lists
//struct, Linked list 鏈結串列
//Doubly Linked List 雙向鏈結

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */

struct ListNode* mergeTwoLists(struct ListNode* l1, struct ListNode* l2){

    struct ListNode head;
    struct ListNode *h = &head;                               //head無指標,因此需加入讀取指標位址

    if (l1 == NULL && l2 == NULL)
        return NULL;

    while (l1 != NULL && l2 != NULL) {
        if (l1->val < l2->val) {                         //尋找較小的節點                  
            h->next = l1;                                //不能簡寫為h ->next = l1 ->next
            l1 = l1->next;
        }
        else {
            h->next = l2;
            l2 = l2->next;
        }
        h = h->next;
    }
    if (l1 != NULL)
        h->next = l1;                                  //合併剩餘的list
    if (l2 != NULL)
        h->next = l2;
    return head.next;

}

//083 Remove Duplicates from Sorted List
//單向鏈結

#include <stdlib.h>
#include <stdio.h>

struct ListNode {
    int val;
    struct ListNode * next;
};
struct ListNode * deleteDuplicates(struct ListNode * head) {

    struct ListNode *list = head;

    while (list != NULL && list ->next != NULL) {
        if (list ->val == list ->next ->val)
            list ->next = list ->next ->next;
        else
            list = list ->next;
    }
    return head;

}
int main() {
    struct ListNode * list1 = (struct ListNode * ) malloc(sizeof(struct ListNode));                            //每次新增節點時要配置記憶體位置
    struct ListNode * list2 = (struct ListNode * ) malloc(sizeof(struct ListNode));
    struct ListNode * list3 = (struct ListNode * ) malloc(sizeof(struct ListNode));
    struct ListNode * list4 = (struct ListNode * ) malloc(sizeof(struct ListNode));
    struct ListNode * list5 = (struct ListNode * ) malloc(sizeof(struct ListNode));
    list1 -> val = 1;
    list1 -> next = list2;
    list2 -> val = 1;
    list2 -> next = list3;
    list3 -> val = 2;
    list3 -> next = list4;
    list4 -> val = 3;
    list4 -> next = list5;
    list5 -> val = 3;
    list5 -> next = NULL;
    struct ListNode * head = deleteDuplicates(list1);
    while (head != NULL) {
        printf("%d->", head -> val);
        head = head -> next;
    }
}
