//035 Search Insert Position
//sorted array
//O(log n)

int searchInsert(int* nums, int numsSize, int target){

    int low = 0;
    int high = numsSize - 1;                               // for (i =0; i < numsSize; i++)
    int mid = low + (high - low) / 2;                   

    while (low <= high) {
        mid = (low + high)/2;
        if (nums[mid] == target)
            return mid;
        else if (nums[mid] < target)
            low = mid + 1;
        else 
            high = mid - 1;
    }
    return low;
}

int main () {
    int a[] = {1,3,5,6};
    int size;
    size = sizeof(a) / sizeof(a[0]);
    printf("%d", searchInsert(a, size, 0));
    return 0;
}

//069 Sqrt(x)

int mySqrt(int x) {

    int low = 1, high = x;
    long mid;

    while (low <= high) {
        mid = low + (high - low) / 2;                     ////直接平均可能會溢位
        if (mid * mid == x)                              //需等於x而非target, 因為target會不斷變動
            return mid;
        else if (mid * mid < x)
            low = mid + 1;
        else
            high = mid - 1;
    }
    return high;                                       //題目要求小數點後無條件捨去,如果return low, 8的平方根會變成3
}
